<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>socket.io</title>
    <!-- socket cdn -->
    <script src="/socket.io/socket.io.js"></script>
    <style>
      /* [ 실습2 ] 채팅창 UI */
      .chat-list {
        background-color: #bacee0;
        width: 50%;
        height: 500px;
        padding: 10px;
        overflow-y: auto;
      }

      .chat-list div {
        margin-top: 3px;
      }

      .chat-list div div {
        display: inline-block;
        padding: 3px;
        border-radius: 5px;
      }

      .my-chat {
        text-align: right;
      }

      .my-chat div {
        background-color: #ffe300;
      }

      .other-chat div {
        background-color: #ffffff;
      }

      /* [ 실습 3 ] 채팅창 입장 안내 문구 */
      .notice {
        text-align: center;
        color: #005397;
        font-size: 12px;
      }
    </style>
  </head>
  <body>
    <h1>My Chat</h1>

    <!-- [실습 1] 각 버튼 누를 때 마다서버로 메세지 보내기 -->
    <!-- <button onclick="sayHello()">Hello</button>
    <button onclick="sayStudy()">Study</button>
    <button onclick="sayBye()">Bye</button>
    <p id="server-result"></p> -->

    <!-- [실습 2] 채팅 UI-->
    <div class="chat-box">
      <div class="chat-list">
        <!-- 임시 대화 데이터 -->
        <div class="my-chat">
          <div>user1: msg1</div>
        </div>
        <div class="other-chat">
          <div>user2: msg2</div>
        </div>
      </div>
    </div>
    <div class="send-msg">
      <input type="text" id="message" />
      <button type="button" onclick="send()">전송</button>
    </div>
  </body>

  <script>
    // 소켓 사용을 위한 객체 생성
    const socket = io.connect();

    socket.on("connect", () => {
      console.log("클라이언트 연결 완료 > ", socket.id);
    });

    // [ 실습 1 ]
    /*
    // hello emit
    function sayHello() {
      socket.emit("hello", { who: "client", msg: "hello" });
    }

    // helloKR on
    socket.on("helloKR", (data) => {
      console.log(data);
      document.getElementById(
        "server-result"
      ).textContent = `${data.who} : ${data.msg}`;
    });

    function sayStudy() {
      socket.emit("study", { who: "client", msg: "hello" });
    }

    socket.on("studyKR", (data) => {
      document.getElementById(
        "server-result"
      ).textContent = `${data.who} : ${data.msg}`;
    });

    function sayBye() {
      socket.emit("bye", { who: "client", msg: "bye" });
    }

    socket.on("byeKR", (data) => {
      document.getElementById(
        "server-result"
      ).textContent = `${data.who} : ${data.msg}`;
    });
  */

    // [ 실습 3 ]
    socket.on("notice", (msg) => {
      document
        .querySelector(".chat-list")
        .insertAdjacentHTML("beforeend", `<div class="notice">${msg}</div>`);
    });
  </script>
</html>
